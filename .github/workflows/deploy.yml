name: Deploy to S3

on:
  push:
    branches:
      - master

jobs:
  configure-secrets:
    runs-on: ubuntu-latest
    env:
      SECRETS_CHECK: ${{ (secrets.AWS_KEY_ID == '') || (secrets.AWS_SECRET_ACCESS_KEY == '') }}
      CF_SECRETS_CHECK: ${{ ( secrets.CF_KEY_ID == '') || (secrets.CF_SECRET_ACCESS_KEY == '') || (secrets.CF_DISTRIBUTION == '') }}
      BUCKET_SECRET_CHECK: ${{ secrets.AWS_BUCKET == '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Initial AWS Credentials
        if: ${{ env.SECRETS_CHECK }} || ${{ env.CF_SECRETS_CHECK }} || ${{ env.BUCKET_SECRET_CHECK }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INITIAL_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INITIAL_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Read secrets into environment variables
        if: ${{ env.SECRETS_CHECK }} || ${{ env.CF_SECRETS_CHECK }} || ${{ env.BUCKET_SECRET_CHECK }}
        uses: abhilash1in/aws-secrets-manager-action@v2.1.0
        with:
          secrets: /
          parse-json: true

      - name: Create Secrets for repo access to AWS
        if: ${{ env.SECRETS_CHECK }}
        run: gh secret set AWS_KEY_ID --body "${{ env.__AWS_KEY_ID }}"; gh secret set AWS_SECRET_ACCESS_KEY --body "${{ env.__AWS_SECRET_ACCESS_KEY }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Create Secrets for CF invalidation access
        if: ${{ env.CF_SECRETS_CHECK }}
        run: gh secret set CF_KEY_ID --body "${{ env.__CF_KEY_ID }}"; gh secret set CF_SECRET_ACCESS_KEY --body "${{ env.__CF_SECRET_ACCESS_KEY }}"; gh secret set CF_DISTRIBUTION --body "${{ env.__CF_DISTRIBUTION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Create Secret for Bucket name
        if: ${{ env.BUCKET_SECRET_CHECK }}
        run: gh secret set AWS_BUCKET --body "${{ env.__AWS_BUCKET }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete --exclude '.git/*' --exclude '.github/*'
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: './public'

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CF_DISTRIBUTION }}
          PATHS: "/*"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_SECRET_ACCESS_KEY }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install chromium
        run: sudo apt-get install -y chromium-browser
      - name: Install pip packages
        run: pip install requests webdriver-manager selenium pytest
      - name: Run pytest
        run: pytest -rA ./__tests__/title/
